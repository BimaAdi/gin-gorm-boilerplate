definitions:
  schemas.BadRequestResponse:
    properties:
      message:
        type: string
    type: object
  schemas.InternalServerErrorResponse:
    properties:
      error:
        type: string
    type: object
  schemas.LoginResponse:
    properties:
      access_token:
        type: string
      token_type:
        type: string
    type: object
  schemas.LogoutResponse:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  schemas.NotFoundResponse:
    properties:
      message:
        type: string
    type: object
  schemas.UnauthorizedResponse:
    properties:
      message:
        type: string
    type: object
  schemas.UserCreateRequest:
    properties:
      email:
        type: string
      is_active:
        type: boolean
      is_superuser:
        type: boolean
      password:
        type: string
      username:
        type: string
    type: object
  schemas.UserCreateResponse:
    properties:
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_superuser:
        type: boolean
      username:
        type: string
    type: object
  schemas.UserDetailResponse:
    properties:
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_superuser:
        type: boolean
      username:
        type: string
    type: object
  schemas.UserPaginateResponse:
    properties:
      counts:
        type: integer
      page:
        type: integer
      page_count:
        type: integer
      page_size:
        type: integer
      results:
        items:
          $ref: '#/definitions/schemas.UserDetailResponse'
        type: array
    type: object
  schemas.UserUpdateRequest:
    properties:
      email:
        type: string
      is_active:
        type: boolean
      is_superuser:
        type: boolean
      password:
        type: string
      username:
        type: string
    type: object
  schemas.UserUpdateResponse:
    properties:
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_superuser:
        type: boolean
      username:
        type: string
    type: object
info:
  contact: {}
  description: Rest api boilerpate in gin
  title: Gin Gorm Boilerplate
  version: "1.0"
paths:
  /auth/login:
    post:
      description: login
      parameters:
      - in: formData
        name: password
        type: string
      - in: formData
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.BadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.InternalServerErrorResponse'
      summary: Login
      tags:
      - Auth
  /auth/logout:
    post:
      description: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.LogoutResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.InternalServerErrorResponse'
      security:
      - OAuth2Password: []
      summary: Logout
      tags:
      - Auth
  /user/:
    get:
      description: Get All User
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserPaginateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.BadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.InternalServerErrorResponse'
      security:
      - OAuth2Password: []
      summary: Get All User
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.BadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.InternalServerErrorResponse'
      security:
      - OAuth2Password: []
      summary: Create User
      tags:
      - User
  /user/{id}:
    delete:
      description: Delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.NotFoundResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.InternalServerErrorResponse'
      security:
      - OAuth2Password: []
      summary: Delete User
      tags:
      - User
    get:
      description: Get detail user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserDetailResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.BadRequestResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.NotFoundResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.InternalServerErrorResponse'
      security:
      - OAuth2Password: []
      summary: Get Detail User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Update User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.BadRequestResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.NotFoundResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.InternalServerErrorResponse'
      security:
      - OAuth2Password: []
      summary: Update User
      tags:
      - User
securityDefinitions:
  OAuth2Password:
    flow: password
    tokenUrl: /auth/login
    type: oauth2
swagger: "2.0"
